{"version":3,"sources":["store/CardStore.js","components/AddButton.jsx","components/svg/Trash.jsx","components/svg/Add.jsx","components/svg/Remove.jsx","components/svg/Tick.jsx","components/Card.jsx","components/useLongPress.jsx","components/CardContainer.jsx","components/CardDeck.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["SAVED_LIST_NAME","list","makeAutoObservable","this","storedJson","localStorage","getItem","Object","assign","JSON","parse","autorun","setItem","stringify","title","id","Math","floor","random","toString","streak","removeItem","observer","props","onClick","store","addCard","className","Trash","size","color","xmlns","height","viewBox","width","fill","d","Add","Remove","Tick","useState","isExpanded","setIsExpanded","currentText","setCurrentText","currentStreak","setCurrentStreak","deletePressed","setDeletePressed","longPress","callback","ms","startLongPress","setStartLongPress","useEffect","timerId","setTimeout","clearTimeout","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","useLongPress","incrementStreak","value","onChange","e","target","handleChange","deleteCard","editedText","replace","length","editCard","map","values","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2638c41e.chunk.js","sourcesContent":["import { makeAutoObservable, autorun } from \"mobx\";\nconst SAVED_LIST_NAME = \"QUABIT_CARDLIST\";\n\nclass CardStore {\n    list = {};\n\n    constructor() {\n        makeAutoObservable(this);\n        const storedJson = localStorage.getItem(SAVED_LIST_NAME)\n\t\tif (storedJson) Object.assign(this, JSON.parse(storedJson))\n\t\tautorun(() => {\n\t\t\tlocalStorage.setItem(SAVED_LIST_NAME, JSON.stringify(this))\n\t\t})\n    }\n\n    addCard(title) {\n        let id = Math.floor(Math.random() * 1000000).toString(16);\n        while(id in this.list) {\n            id = Math.floor(Math.random() * 1000000).toString(16);\n        }\n        this.list[id] = {\n            id,\n            title,\n            streak: 0,\n        };\n    }\n\n    editCard(id, title, streak) {\n        this.list[id].title = title;\n        this.list[id].streak = streak;\n    }\n\n    deleteCard(id) {\n        delete this.list[id];\n    }\n\n    incrementStreak(id) {\n        this.list[id].streak += 1;\n    }\n\n    reset() {\n\t\tlocalStorage.removeItem(SAVED_LIST_NAME);\n\t}\n}\n\nexport default new CardStore();","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport store from '../store/CardStore';\n\nfunction AddButton(props) {\n    return (\n        <div \n            onClick={() => store.addCard(\"Long press to edit title.\")}\n            className=\"add-button no-select\"\n        >\n            +\n        </div>\n    );\n}\n\nexport default observer(AddButton);","import React from 'react';\n\nconst Trash = ({size=\"36\", color=\"#98E9E9\"}) => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height={`${size}px`} viewBox=\"0 0 24 24\" width={`${size}px`} fill={`${color}`}><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n            <path d=\"M14.12 10.47L12 12.59l-2.13-2.12-1.41 1.41L10.59 14l-2.12 2.12 1.41 1.41L12 15.41l2.12 2.12 1.41-1.41L13.41 14l2.12-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4zM6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9z\"/>\n        </svg>\n    );\n}\n\nexport default Trash;","import React from 'react';\n\nconst Add = ({size=\"36\", color=\"#98E9E9\"}) => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height={`${size}px`} viewBox=\"0 0 24 24\" width={`${size}px`} fill={`${color}`}>\n            <path d=\"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n        </svg>\n    );\n}\n\nexport default Add;","import React from 'react';\n\nconst Remove = ({size=\"36\", color=\"#98E9E9\"}) => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height={`${size}px`} viewBox=\"0 0 24 24\" width={`${size}px`} fill={`${color}`}>\n            <path d=\"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"/>\n        </svg>\n    );\n}\n\nexport default Remove;","import React from 'react';\n\nconst Tick = ({size=\"36\", color=\"#98E9E9\"}) => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height={`${size}px`} viewBox=\"0 0 24 24\" width={`${size}px`} fill={`${color}`}><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/>\n        </svg>\n    );\n}\n\nexport default Tick;","import { observer } from 'mobx-react-lite';\nimport React, { useEffect, useState } from 'react';\nimport store from '../store/CardStore';\nimport useLongPress from './useLongPress';\nimport TextArea from 'react-textarea-autosize';\nimport Trash from './svg/Trash';\nimport Add from './svg/Add';\nimport Remove from './svg/Remove';\nimport Tick from './svg/Tick';\n\nconst Card = ({id, title, streak}) => {\n    const [isExpanded, setIsExpanded] = useState(false);\n    const [currentText, setCurrentText] = useState(title);\n    const [currentStreak, setCurrentStreak] = useState(streak);\n    const [deletePressed, setDeletePressed] = useState(false);\n    const longPress = useLongPress(() => setIsExpanded(!isExpanded), 1000);\n\n    useEffect(() => {\n        setCurrentStreak(streak);\n    }, [streak]);\n\n    const saveChanges = () => {\n        setIsExpanded(false);\n        setDeletePressed(false);\n\n        const editedText = (currentText === \"\" \n            || !currentText.replace(/\\s/g, '').length) \n            ? \"Enter a title\"\n            : currentText;\n\n        store.editCard(id, editedText, currentStreak);\n    };\n    \n    const handlePress = () => {\n        if (isExpanded) return;\n        store.incrementStreak(id);\n    };\n\n    const handleChange = (e) => {\n        setCurrentText(e.target.value);\n    };\n\n    const increase = () => {\n        setCurrentStreak(currentStreak + 1);\n    };\n\n    const decrease = () => {\n        setCurrentStreak(currentStreak ? currentStreak - 1 : 0);\n    };\n\n    const deleteCard = () => {\n        if(!deletePressed) {\n            setDeletePressed(true);\n            return;\n        }\n        store.deleteCard(id);\n        setDeletePressed(false);\n    }\n\n    return (\n        <div \n            className={`card${isExpanded ? \"\" : \" pressable no-select\"}`} \n            {...longPress}\n            onClick={handlePress}\n        >\n            {!isExpanded ? \n                <div>\n                    <div className=\"title-container\">\n                        <div className=\"card-title\">{title}</div>\n                    </div>\n                    <div className=\"card-streak-container\">\n                        <div className=\"card-streak\">{streak}</div>\n                    </div>\n                </div> \n                :\n                <div>\n                    <div className=\"title-container\">\n                        <TextArea\n                            className=\"edit-title card-title\"\n                            value={currentText}\n                            onChange={(e) => handleChange(e)}\n                        />\n                    </div>\n                    <div className=\"adjust-container card-streak\">\n                        <div \n                            className=\"adjust-button no-select\"\n                            onClick={decrease}\n                        >\n                            <Remove size={24}/>\n                        </div>\n\n                        <div>{currentStreak}</div>\n                        \n                        <div\n                            className=\"adjust-button no-select\"\n                            onClick={increase}\n                        >\n                            <Add size={24}/>\n                        </div>\n                    </div>\n                    <div className=\"delete-container\">\n                        <div \n                            onClick={deleteCard}\n                            className=\"adjust-button no-select\"\n                        >\n                            <Trash color={'#F25A85'}/>\n                            {deletePressed ? \n                                <span className=\"delete-text\">Press again to delete</span> \n                                : null}\n                        </div>\n                        <div \n                            onClick={saveChanges}\n                            className=\"adjust-button no-select tick\"\n                        >\n                            <Tick />\n                        </div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default observer(Card);","import { useState, useEffect } from 'react';\n\nexport default function useLongPress(callback = () => {}, ms = 300) {\n  const [startLongPress, setStartLongPress] = useState(false);\n\n  useEffect(() => {\n    let timerId;\n    if (startLongPress) {\n      timerId = setTimeout(callback, ms);\n    } else {\n      clearTimeout(timerId);\n    }\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [callback, ms, startLongPress]);\n\n  return {\n    onMouseDown: () => setStartLongPress(true),\n    onMouseUp: () => setStartLongPress(false),\n    onMouseLeave: () => setStartLongPress(false),\n    onTouchStart: () => setStartLongPress(true),\n    onTouchEnd: () => setStartLongPress(false),\n  };\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport Card from './Card';\n\nconst CardContainer = ({list}) => {\n    return (\n        <div className='card-container'>\n            {list.map(({id, title, streak}) =>\n                <Card \n                    key={id}\n                    id={id}\n                    title={title}\n                    streak={streak}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default observer(CardContainer);","import React, { useEffect } from 'react';\nimport AddButton from './AddButton';\nimport CardContainer from './CardContainer';\nimport store from '../store/CardStore';\nimport { observer } from 'mobx-react-lite';\n\nconst CardDeck = (props) => {\n    const list = Object.values(store.list);\n    return (\n        <div className=\"deck-area\">\n            <CardContainer list={list}/>\n            <div className=\"app-bar\">\n                <div>Quabit</div>\n                <AddButton/>\n            </div>\n        </div>\n    );\n}\n\nexport default observer(CardDeck);","import './App.css';\nimport CardDeck from './components/CardDeck';\n\nfunction App() {\n  return (\n      <CardDeck/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}